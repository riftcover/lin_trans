name: Build and Release

on:
  push:
    branches:
      - 'build/**'
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            python-version: '3.11'
            artifact_name: windows
          - os: macos-latest
            python-version: '3.11'
            artifact_name: macos

    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --frozen
        
    - name: Create necessary directories
      run: mkdir -p models result logs
      shell: bash

    - name: Initialize database
      run: uv run python -c "import orm.inint"
      shell: bash

    - name: Build with PyInstaller
      run: uv run python install_build.py
      shell: bash
        
    - name: Package artifacts
      run: |
        cd dist
        if [ "${{ runner.os }}" = "Windows" ]; then
          7z a -tzip Lapped-${{ matrix.artifact_name }}.zip Lapped/
        else
          zip -r Lapped-${{ matrix.artifact_name }}.zip Lapped/
        fi
      shell: bash

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Lapped-${{ matrix.artifact_name }}
        path: dist/Lapped-${{ matrix.artifact_name }}.zip

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/Lapped-${{ matrix.artifact_name }}.zip
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
